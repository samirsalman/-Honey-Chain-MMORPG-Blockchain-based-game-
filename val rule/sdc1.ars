
define ipset tutti_gli_ip = {*.*.*.*:* };

define urlset url_login_set = { /login/* };

define set utenti_ammessi = { "simone@gmail.com" };

define set utenti_loggati = { };
define urlset pagine_protette = { /profilo/* }; // */




DEFINE AR "passa_login"
 CONDITION
       http.url is in url_login_set
       http.http.query["email"] is in utenti_ammessi
ACTION 
       tcp.redirect "127.0.0.1:3000"
 ;



 
DEFINE AR "blocca_login"
 CONDITION
       http.url is in url_login_set
       not http.http.query["email"] is in utenti_ammessi
ACTION 
       ANSWER "BLOCCATO"
 ;




DEFINE AR "passa protette"
CONDITION
       http.url is in pagine_protette
       http.cookie["uid"] is in utenti_loggati
ACTION
       tcp.redirect "127.0.0.1:3000"
;


DEFINE AR "blocca protette"
CONDITION
       http.url is in pagine_protette
       not http.cookie["uid"] is in utenti_loggati
ACTION
       answer "COOKIE NON AMMESSO"
;



DEFINE AR "passa_tutto"
 CONDITION
       net.ipdst is in tutti_gli_ip
 ACTION
       tcp.redirect "127.0.0.1:3000"
 ;

DEFINE VR "verifica login"
       CONDITION
              obs.event is net.send
              http.url is in url_login_set
       VAR
              sessione = net.sesid
              utente = http.http.query["email"]
       ACTION 
              report login {http.uri, http.query["email"]}
       NEXT (
              exists http.answer.cookie["uid"]
              obs.event is net.recv
              net.sesid is sessione
       ACTION
              report login {cat {"il login di ", utente, " è stato completato con successo", http.answer.cookie["uid"]}}
              add http.answer.cookie["uid"] to set utenti_loggati 30
       OR     
              not exists http.answer.cookie["uid"]
              obs.event is net.recv
              net.sesid is sessione
       ACTION
              report login {cat {"il login di ", utente, " non è stato completato con successo"}}
       )
;



DEFINE VR "stampa tutto"
       CONDITION
              obs.event is net.send
             // exists http.cookie["uid"]
       ACTION
              report login {cat {"trovato cookie di richiesta: ",http.cookie["uid"]}}

       
       ;